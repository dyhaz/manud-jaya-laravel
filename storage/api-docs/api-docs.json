{
    "openapi": "3.0.0",
    "info": {
        "title": "My First API",
        "version": "0.1"
    },
    "paths": {
        "/api/assets": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Upload a new asset file.",
                "description": "Upload a new asset file.",
                "operationId": "uploadAssetFile",
                "requestBody": {
                    "description": "Asset file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "Asset file to upload",
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Asset file uploaded successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/assets/{filename}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Download an asset file.",
                "description": "Download an asset file.",
                "operationId": "downloadAssetFile",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "The filename of the asset to download",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset file downloaded successfully"
                    },
                    "404": {
                        "description": "Asset file not found"
                    }
                }
            }
        },
        "/api/assets2": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Upload a new asset file from base64-encoded data.",
                "description": "Upload a new asset file from base64-encoded data.",
                "operationId": "uploadAssetFileFromBase64",
                "requestBody": {
                    "description": "Asset file to upload in base64-encoded format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "Base64-encoded asset file to upload",
                                        "type": "string",
                                        "format": "byte"
                                    },
                                    "extension": {
                                        "description": "File extension of the asset file (e.g. 'jpg', 'png', 'pdf')",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Asset file uploaded successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user and generate an access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "dummy@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user and revoke their access token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email/{token}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user email",
                "description": "Verify the email address of a user using the provided email verification token",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The email verification token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/send-email-verification-link": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sends an email verification link to the user.",
                "description": "Sends an email verification link to the user. The link contains a unique token that the user can use to verify their email address.",
                "operationId": "sendEmailVerificationLink",
                "requestBody": {
                    "description": "The email address of the user.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The email verification link has been sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification link sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The user does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while sending the email verification link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while sending the email verification link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Show the dashboard with summary data.",
                "operationId": "dashboard",
                "responses": {
                    "200": {
                        "description": "Dashboard record retrieved successfully"
                    }
                }
            }
        },
        "/api/dashboard/anggaran": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get the total anggaran for each month in the current year.",
                "operationId": "anggaran",
                "responses": {
                    "200": {
                        "description": "Dashboard record retrieved successfully"
                    }
                }
            }
        },
        "/api/dashboard/anggaran/{year}": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Show the finance report for the current year.",
                "operationId": "anggaranByMonth",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Current year.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard record retrieved successfully"
                    }
                }
            }
        },
        "/api/desa/{id}": {
            "get": {
                "tags": [
                    "Desa"
                ],
                "summary": "Retrieve a single Desa record by ID",
                "operationId": "showDesa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Desa record retrieved successfully"
                    },
                    "404": {
                        "description": "Desa record not found"
                    }
                }
            }
        },
        "/api/desa": {
            "get": {
                "tags": [
                    "Desa"
                ],
                "summary": "Get all Desa records",
                "description": "Returns a list of all Desa records.",
                "operationId": "getAllDesa",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Desa"
                ],
                "summary": "Create a new Desa record",
                "description": "Creates a new Desa record with the given data.",
                "operationId": "createDesa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_desa",
                                    "kecamatan",
                                    "kabupaten_kota",
                                    "provinsi",
                                    "jumlah_penduduk"
                                ],
                                "properties": {
                                    "nama_desa": {
                                        "type": "string",
                                        "example": "Desa Baru"
                                    },
                                    "kecamatan": {
                                        "type": "string",
                                        "example": "Kecamatan Baru"
                                    },
                                    "kabupaten_kota": {
                                        "type": "string",
                                        "example": "Kabupaten Baru"
                                    },
                                    "provinsi": {
                                        "type": "string",
                                        "example": "Provinsi Baru"
                                    },
                                    "jumlah_penduduk": {
                                        "type": "integer",
                                        "example": "1000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/desa/{id}": {
            "put": {
                "tags": [
                    "Desa"
                ],
                "summary": "Update a Desa record",
                "description": "Update a specific Desa record.",
                "operationId": "c9797173349891b9ed85bfdda17b267f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Desa to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_desa",
                                    "kecamatan",
                                    "kabupaten_kota",
                                    "provinsi",
                                    "jumlah_penduduk"
                                ],
                                "properties": {
                                    "nama_desa": {
                                        "type": "string",
                                        "example": "Desa Baru"
                                    },
                                    "kecamatan": {
                                        "type": "string",
                                        "example": "Kecamatan Baru"
                                    },
                                    "kabupaten_kota": {
                                        "type": "string",
                                        "example": "Kabupaten Baru"
                                    },
                                    "provinsi": {
                                        "type": "string",
                                        "example": "Provinsi Baru"
                                    },
                                    "jumlah_penduduk": {
                                        "type": "integer",
                                        "example": "1000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Desa not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jenis-perizinan": {
            "get": {
                "tags": [
                    "Jenis Perizinan"
                ],
                "summary": "Get all jenis perizinan",
                "description": "Returns all jenis perizinan data",
                "operationId": "getAllJenisPerizinan",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Jenis Perizinan"
                ],
                "summary": "Create new jenis perizinan",
                "description": "Create a new jenis perizinan data",
                "operationId": "createJenisPerizinan",
                "requestBody": {
                    "description": "Jenis Perizinan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JenisPerizinanInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Jenis Perizinan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jenis-perizinan/{id}": {
            "get": {
                "tags": [
                    "Jenis Perizinan"
                ],
                "summary": "Get jenis perizinan by ID",
                "description": "Returns a single jenis perizinan data",
                "operationId": "getJenisPerizinan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Jenis Perizinan ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Jenis Perizinan not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Jenis Perizinan"
                ],
                "summary": "Update jenis perizinan by ID",
                "description": "Update a single jenis perizinan data",
                "operationId": "updateJenisPerizinan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Jenis Perizinan ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Jenis Perizinan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JenisPerizinanInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Jenis Perizinan updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Jenis Perizinan"
                ],
                "summary": "Delete by ID",
                "operationId": "deleteJenisPerizinan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Jenis Perizinan record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Jenis Perizinan record not found"
                    }
                }
            }
        },
        "/api/jenis-program": {
            "get": {
                "tags": [
                    "Jenis Program"
                ],
                "summary": "Get all jenis program",
                "description": "Returns a list of all the jenis program.",
                "operationId": "showJenisProgram",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Jenis Program"
                ],
                "summary": "Create a new jenis program",
                "description": "Creates a new jenis program record.",
                "operationId": "addJenisProgram",
                "requestBody": {
                    "description": "Jenis program details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nama": {
                                        "type": "string",
                                        "example": "Program A"
                                    },
                                    "deskripsi": {
                                        "type": "string",
                                        "example": "Deskripsi Program A"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Jenis program created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/pelaksana-program": {
            "get": {
                "tags": [
                    "Pelaksana Program"
                ],
                "summary": "Get all PelaksanaPrograms",
                "operationId": "getAllPelaksanaProgram",
                "responses": {
                    "200": {
                        "description": "List of PelaksanaPrograms"
                    }
                }
            },
            "post": {
                "tags": [
                    "Pelaksana Program"
                ],
                "summary": "Create a new PelaksanaProgram",
                "operationId": "createPelaksanaProgram",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_pelaksana",
                                    "jabatan",
                                    "kontak",
                                    "program_id"
                                ],
                                "properties": {
                                    "nama_pelaksana": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "jabatan": {
                                        "type": "string",
                                        "example": "Sekda"
                                    },
                                    "kontak": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PelaksanaProgram created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/pelaksana-program/{id}": {
            "get": {
                "tags": [
                    "Pelaksana Program"
                ],
                "summary": "Retrieve a single Pelaksana Program record by ID",
                "operationId": "showPelaksanaProgram",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pelaksana Desa record retrieved successfully"
                    },
                    "404": {
                        "description": "Pelaksana Desa record not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Pelaksana Program"
                ],
                "summary": "Update a Pelaksana Program record",
                "description": "Update a specific Pelaksana Program record.",
                "operationId": "updatePelaksanaProgram",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pelaksana Program to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_pelaksana",
                                    "jabatan",
                                    "kontak",
                                    "program_id"
                                ],
                                "properties": {
                                    "nama_pelaksana": {
                                        "type": "string",
                                        "example": "Bang Al"
                                    },
                                    "jabatan": {
                                        "type": "string",
                                        "example": "Sekda"
                                    },
                                    "kontak": {
                                        "type": "string",
                                        "example": "1234567"
                                    },
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Pelaksana Program not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pelaksana Program"
                ],
                "summary": "Delete by ID",
                "operationId": "deletePelaksanaProgram",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pelaksana Program record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Pelaksana Program record not found"
                    }
                }
            }
        },
        "/api/perizinan": {
            "get": {
                "tags": [
                    "Perizinan"
                ],
                "summary": "Get all perizinan requests",
                "operationId": "getPerizinan",
                "responses": {
                    "200": {
                        "description": "Returns all perizinan requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Perizinan"
                ],
                "summary": "Create a new perizinan request",
                "operationId": "createPerizinan",
                "requestBody": {
                    "description": "Request body for creating a new perizinan request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRequestPerizinan"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Perizinan request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/perizinan-by-email": {
            "get": {
                "tags": [
                    "Perizinan"
                ],
                "summary": "Get perizinan data filtered by email and status request",
                "description": "Returns perizinan data based on email and status request",
                "operationId": "getPerizinanByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Warga not found"
                    }
                }
            }
        },
        "/api/perizinan/{id}": {
            "get": {
                "tags": [
                    "Perizinan"
                ],
                "summary": "Get a perizinan request by ID",
                "operationId": "getPerizinanById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the perizinan request to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the specified perizinan request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Perizinan request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Perizinan"
                ],
                "summary": "Update a perizinan request by ID",
                "operationId": "updatePerizinan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the perizinan request to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body for updating a perizinan request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRequestPerizinan"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Perizinan request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Perizinan request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Perizinan"
                ],
                "summary": "Delete a perizinan request by ID",
                "operationId": "deletePerizinan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the perizinan request to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Perizinan request deleted successfully"
                    },
                    "404": {
                        "description": "Perizinan request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/program-desa": {
            "get": {
                "tags": [
                    "ProgramDesa"
                ],
                "summary": "Get list of program desa",
                "description": "Returns list of program desa",
                "operationId": "getProgramDesa",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "api_key_security_example": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramDesa"
                ],
                "summary": "Store new ProgramDesa",
                "description": "Returns ProgramDesa data",
                "operationId": "storeProgramDesa",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Header to indicate the requested content type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_program",
                                    "deskripsi_program",
                                    "tanggal_mulai",
                                    "tanggal_selesai"
                                ],
                                "properties": {
                                    "nama_program": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "deskripsi_program": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "tanggal_mulai": {
                                        "type": "string",
                                        "example": "2022-03-03"
                                    },
                                    "tanggal_selesai": {
                                        "type": "string",
                                        "example": "2022-03-03"
                                    },
                                    "anggaran": {
                                        "type": "string",
                                        "example": "100000000"
                                    },
                                    "foto": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "jenis_program": {
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/program-desa-landing": {
            "get": {
                "tags": [
                    "ProgramDesa"
                ],
                "summary": "Get all ProgramDesa with optional filters",
                "operationId": "getProgramDesaLanding",
                "parameters": [
                    {
                        "name": "nama_program",
                        "in": "query",
                        "description": "Filter by nama_program",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tanggal_mulai",
                        "in": "query",
                        "description": "Filter by tanggal_mulai",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "tanggal_selesai",
                        "in": "query",
                        "description": "Filter by tanggal_selesai",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "desa_id",
                        "in": "query",
                        "description": "Filter by desa_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramDesa",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/program-desa/{id}": {
            "get": {
                "tags": [
                    "ProgramDesa"
                ],
                "summary": "Get ProgramDesa information",
                "description": "Returns ProgramDesa data",
                "operationId": "getProgramDesaById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ProgramDesa ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "ProgramDesa not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ProgramDesa"
                ],
                "summary": "Update existing ProgramDesa",
                "description": "Returns updated ProgramDesa data",
                "operationId": "updateProgramDesa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ProgramDesa ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Header to indicate the requested content type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nama_program",
                                    "deskripsi_program",
                                    "tanggal_mulai",
                                    "tanggal_selesai"
                                ],
                                "properties": {
                                    "nama_program": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "deskripsi_program": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "tanggal_mulai": {
                                        "type": "string",
                                        "example": "2022-03-03"
                                    },
                                    "tanggal_selesai": {
                                        "type": "string",
                                        "example": "2022-03-03"
                                    },
                                    "anggaran": {
                                        "type": "string",
                                        "example": "100000000"
                                    },
                                    "foto": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "jenis_program": {
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "ProgramDesa not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProgramDesa"
                ],
                "summary": "Delete by ID",
                "operationId": "deleteProgram",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Header to indicate the requested content type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Program record deleted successfully"
                    },
                    "404": {
                        "description": "Program record not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "List of users"
                    }
                }
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "user_level": {
                                        "type": "string",
                                        "example": "warga_desa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Retrieve a single user by ID",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User record retrieved successfully"
                    },
                    "404": {
                        "description": "User record not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update a user record",
                "description": "Update a specific user record.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "user_level": {
                                        "type": "string",
                                        "example": "warga_desa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User record not found"
                    }
                }
            }
        },
        "/api/user-by-email/{email}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Retrieve a single user by email",
                "operationId": "showUserByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User record retrieved successfully"
                    },
                    "404": {
                        "description": "User record not found"
                    }
                }
            }
        },
        "/api/user/password": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Change user password",
                "description": "Changes the password of the authenticated user",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "The user's ID",
                                        "type": "integer"
                                    },
                                    "current_password": {
                                        "description": "The user's current password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password": {
                                        "description": "The user's new password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password_confirmation": {
                                        "description": "Confirmation of the user's new password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid current password",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/warga": {
            "get": {
                "tags": [
                    "Warga"
                ],
                "summary": "Get all warga data",
                "description": "Returns all warga data",
                "operationId": "getAllWarga",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "an 'unexpected error' occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Warga"
                ],
                "summary": "Store new warga",
                "description": "Stores new warga data",
                "operationId": "storeWarga",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Warga"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Warga data stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "an 'unexpected error' occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/warga2": {
            "get": {
                "tags": [
                    "Warga"
                ],
                "summary": "Get list of all warga",
                "operationId": "filterWarga",
                "parameters": [
                    {
                        "name": "nama_warga",
                        "in": "query",
                        "description": "Filter by nama warga",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "alamat",
                        "in": "query",
                        "description": "Filter by alamat",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by Email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nik",
                        "in": "query",
                        "description": "Filter by NIK",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all warga",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/warga/{id}": {
            "get": {
                "tags": [
                    "Warga"
                ],
                "summary": "Get warga data by id",
                "description": "Returns warga data based on given id",
                "operationId": "getWargaById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the warga to get",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warga not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "an 'unexpected error' occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Warga"
                ],
                "summary": "Update existing warga data",
                "description": "Updates existing warga data based on given id",
                "operationId": "updateWarga",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the warga to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Warga"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Warga data updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DataResponse": {
                "description": "Data response dari permintaan perizinan",
                "properties": {
                    "status": {
                        "description": "Keterangan status response",
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "description": "Pesan terkait response",
                        "type": "string",
                        "example": "Permintaan perizinan berhasil diajukan"
                    },
                    "data": {
                        "description": "Data API",
                        "type": "object"
                    }
                },
                "type": "object",
                "example": {
                    "status": "success",
                    "message": "Permintaan perizinan berhasil diajukan",
                    "data": {
                        "nama": "John Doe",
                        "alamat": "Jl. Kenanga No. 123",
                        "jenis_perizinan": "Izin Usaha",
                        "tanggal_mulai": "2023-04-01",
                        "tanggal_selesai": "2023-06-30"
                    }
                }
            },
            "Error": {
                "description": "Error",
                "properties": {
                    "message": {
                        "description": "Pesan error",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "message": "Oops, something went wrong."
                }
            },
            "JenisPerizinanInput": {
                "title": "Jenis Perizinan Input",
                "required": [
                    "nama_jenis",
                    "deskripsi"
                ],
                "properties": {
                    "nama_jenis": {
                        "description": "Nama jenis perizinan",
                        "type": "string"
                    },
                    "deskripsi_perizinan": {
                        "description": "Deskripsi jenis perizinan",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NotFound": {
                "description": "Data yang diminta tidak ditemukan",
                "properties": {
                    "message": {
                        "description": "Pesan error yang menunjukkan data tidak ditemukan",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "message": "Data dengan ID 123 tidak ditemukan"
                }
            },
            "CreateRequestPerizinan": {
                "title": "Create Request Perizinan",
                "required": [
                    "nama",
                    "alamat",
                    "warga_id"
                ],
                "properties": {
                    "nama": {
                        "description": "Nama lengkap pemohon perizinan",
                        "type": "string"
                    },
                    "alamat": {
                        "description": "Alamat lengkap pemohon perizinan",
                        "type": "string"
                    },
                    "tanggal_request": {
                        "description": "Tanggal request perizinan",
                        "type": "string"
                    },
                    "keterangan": {
                        "description": "Keterangan perizinan",
                        "type": "string"
                    },
                    "lampiran": {
                        "description": "Lampiran perizinan",
                        "type": "string"
                    },
                    "status_request": {
                        "description": "Status perizinan",
                        "type": "string"
                    },
                    "jenis_perizinan": {
                        "description": "Jenis perizinan yang diajukan",
                        "type": "string"
                    },
                    "jenis_id": {
                        "description": "ID dari perizinan yang diajukan",
                        "type": "integer"
                    },
                    "warga_id": {
                        "description": "ID dari warga yang mengajukan perizinan",
                        "type": "integer"
                    }
                },
                "type": "object",
                "example": {
                    "nama": "John Doe",
                    "alamat": "Jl. Sudirman No. 123",
                    "jenis_perizinan": "Surat Izin Keramaian",
                    "tanggal_request": "2022-01-01",
                    "status_request": "",
                    "keterangan": "Pembuatan surat izin keramaian",
                    "warga_id": 1,
                    "jenis_id": 1
                }
            },
            "UpdateRequestPerizinan": {
                "title": "Update Request Perizinan",
                "description": "Data yang diperlukan untuk memperbarui permintaan perizinan",
                "required": [
                    "nama",
                    "alamat",
                    "jenis_perizinan",
                    "jenis_id",
                    "tanggal_mulai",
                    "tanggal_selesai"
                ],
                "properties": {
                    "nama": {
                        "description": "Nama lengkap pemohon perizinan",
                        "type": "string"
                    },
                    "alamat": {
                        "description": "Alamat lengkap pemohon perizinan",
                        "type": "string"
                    },
                    "jenis_perizinan": {
                        "description": "Jenis perizinan yang diminta",
                        "type": "string"
                    },
                    "jenis_id": {
                        "description": "ID dari perizinan yang diajukan",
                        "type": "integer"
                    },
                    "tanggal_request": {
                        "description": "Tanggal request perizinan",
                        "type": "string"
                    },
                    "keterangan": {
                        "description": "Keterangan perizinan",
                        "type": "string"
                    },
                    "status_request": {
                        "description": "Status perizinan",
                        "type": "string"
                    },
                    "tanggal_mulai": {
                        "description": "Tanggal mulai berlakunya perizinan",
                        "type": "string",
                        "format": "date"
                    },
                    "tanggal_selesai": {
                        "description": "Tanggal berakhirnya perizinan",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object",
                "example": {
                    "nama": "John Doe",
                    "alamat": "Jl. Kenanga No. 123",
                    "jenis_perizinan": "Izin Usaha",
                    "tanggal_request": "2022-01-01",
                    "status_request": "",
                    "keterangan": "Pembuatan surat izin usaha",
                    "jenis_id": 123,
                    "tanggal_mulai": "2023-04-01",
                    "tanggal_selesai": "2023-06-30"
                }
            },
            "ValidationError": {
                "description": "Error validasi data request",
                "properties": {
                    "message": {
                        "description": "Pesan error yang menunjukkan data request tidak valid",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Daftar error validasi pada setiap properti request",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "example": {
                    "message": "Data request tidak valid",
                    "errors": [
                        "Nama harus diisi",
                        "Alamat harus diisi",
                        "Jenis perizinan harus diisi",
                        "Warga ID harus diisi"
                    ]
                }
            },
            "Warga": {
                "properties": {
                    "warga_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nama_warga": {
                        "type": "string"
                    },
                    "alamat": {
                        "type": "string"
                    },
                    "nomor_telepon": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "nik": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    }
}